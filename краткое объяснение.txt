В общем, я решил сделать через http, там процесс request/response уже реализован за нас. Можно было делать на TcpClient, но это получитсяполучилось бы несколько сложнее и дольше.
Есть класс Server. В нем метод StartListening запускает прослушивание HTTP на выбранном IPEndpoint (адрес + порт)
StartListening возвращает задачу (Task), которая остановится при остановке сервера

При вызове метода Dispose сервер останавливается, все ресурсы очищаются

Внутри StartListening запускается HttpListener, в бесконечном (ну, почти, до отмены) цикле происходит следующее:
1) Дождаться запроса
2) Прочитать его содержимое в MemoryStream
3) Преобразовать MemoryStream в массив байтов, его в свою очередь раскодировать в строку message (предполагая, что там кодировка UTF-8)
4) Вызвать наш алгоритм для этой строки, получить результат
5) Закодировать результат обратно в байты (той же UTF-8) и отправить в качестве response

Сам алгоритм в файле MostFrequentWordsInfo 

Это класс, содержащий массив самых частых слов и их количество (сколько раз встретились)

В нем же метод GetMostFrequentWords, который:
1) Делит строку на слова методом Split
2) Группирует их и сортирует по убыванию количества
3) Смотрит среди них максимальное количество, выбирает все группы с таким количеством слов и преобразовывает их в результат

Что касается клиента, у него такой алгоритм: 
1) Запросить ввод строки
2) Отправить строку по заданному адресу
3) Прочитать ответ
 